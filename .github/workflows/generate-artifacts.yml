name: build_artifacts
on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build_artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Generating tests
        uses: actions/checkout@v3
      - run: mkdir -p path/to/artifact
      - run: echo hello1 > path/to/artifact/test_file1.txt
      - run: echo hello2 > path/to/artifact/test_file2.txt
      
      - name: Tar test files
        run: tar -cvf ${{github.event.number}}_tests.tar path/to/artifact

      - name: Upload test files as artifact
        uses: actions/upload-artifact@v3
        with:
          name: testcases-artifact-${{github.event.number}}
          path: ${{github.event.number}}_tests.tar
  notify:
        runs-on: ubuntu-latest
        needs: build_artifacts
        steps:
          - name: Notify the PR owner
            uses: actions/github-script@v5
            with:
              github-token: ${{secrets.GITHUB_TOKEN}}
              script: |
                let times = 0;
                const id = setInterval(async () => {
                  times += 1;
                  try {
                    var artifacts = await github.rest.actions.listWorkflowRunArtifacts({
                       owner: context.repo.owner,
                       repo: context.repo.repo,
                       run_id: context.runId
                    });
                    var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
                      return artifact.name === `testcases-artifact-${context.issue.number}`
                    })[0];
                    var downloadResponse = await github.rest.actions.downloadArtifact({
                       owner: context.repo.owner,
                       repo: context.repo.repo,
                       artifact_id: matchArtifact.id,
                       archive_format: 'zip'
                    });
                    console.log(JSON.stringify(downloadResponse));
                    await github.rest.issues.createComment({
                      issue_number: context.issue.number,
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      body: `Unit Test cases for this PR are generated. Click [here](${downloadResponse.url}) to download the testcases.`
                    });
                    clearInterval(id);
                  } catch(error) {
                    console.log(JSON.stringify(error));
                  }
                  if (times >= 10) {
                    clearInterval(id); 
                  }
                }, 2000);
